/*
 * This file is generated by jOOQ.
 */
package brs.schema.tables.records;


import brs.schema.tables.AccountBalance;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountBalanceRecord extends UpdatableRecordImpl<AccountBalanceRecord> implements Record7<Long, Long, Long, Long, Long, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB.account_balance.db_id</code>.
     */
    public void setDbId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>DB.account_balance.db_id</code>.
     */
    public Long getDbId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB.account_balance.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>DB.account_balance.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>DB.account_balance.balance</code>.
     */
    public void setBalance(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>DB.account_balance.balance</code>.
     */
    public Long getBalance() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>DB.account_balance.unconfirmed_balance</code>.
     */
    public void setUnconfirmedBalance(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>DB.account_balance.unconfirmed_balance</code>.
     */
    public Long getUnconfirmedBalance() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>DB.account_balance.forged_balance</code>.
     */
    public void setForgedBalance(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>DB.account_balance.forged_balance</code>.
     */
    public Long getForgedBalance() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>DB.account_balance.height</code>.
     */
    public void setHeight(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>DB.account_balance.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>DB.account_balance.latest</code>.
     */
    public void setLatest(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>DB.account_balance.latest</code>.
     */
    public Boolean getLatest() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Long, Integer, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, Long, Long, Integer, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AccountBalance.ACCOUNT_BALANCE.DB_ID;
    }

    @Override
    public Field<Long> field2() {
        return AccountBalance.ACCOUNT_BALANCE.ID;
    }

    @Override
    public Field<Long> field3() {
        return AccountBalance.ACCOUNT_BALANCE.BALANCE;
    }

    @Override
    public Field<Long> field4() {
        return AccountBalance.ACCOUNT_BALANCE.UNCONFIRMED_BALANCE;
    }

    @Override
    public Field<Long> field5() {
        return AccountBalance.ACCOUNT_BALANCE.FORGED_BALANCE;
    }

    @Override
    public Field<Integer> field6() {
        return AccountBalance.ACCOUNT_BALANCE.HEIGHT;
    }

    @Override
    public Field<Boolean> field7() {
        return AccountBalance.ACCOUNT_BALANCE.LATEST;
    }

    @Override
    public Long component1() {
        return getDbId();
    }

    @Override
    public Long component2() {
        return getId();
    }

    @Override
    public Long component3() {
        return getBalance();
    }

    @Override
    public Long component4() {
        return getUnconfirmedBalance();
    }

    @Override
    public Long component5() {
        return getForgedBalance();
    }

    @Override
    public Integer component6() {
        return getHeight();
    }

    @Override
    public Boolean component7() {
        return getLatest();
    }

    @Override
    public Long value1() {
        return getDbId();
    }

    @Override
    public Long value2() {
        return getId();
    }

    @Override
    public Long value3() {
        return getBalance();
    }

    @Override
    public Long value4() {
        return getUnconfirmedBalance();
    }

    @Override
    public Long value5() {
        return getForgedBalance();
    }

    @Override
    public Integer value6() {
        return getHeight();
    }

    @Override
    public Boolean value7() {
        return getLatest();
    }

    @Override
    public AccountBalanceRecord value1(Long value) {
        setDbId(value);
        return this;
    }

    @Override
    public AccountBalanceRecord value2(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AccountBalanceRecord value3(Long value) {
        setBalance(value);
        return this;
    }

    @Override
    public AccountBalanceRecord value4(Long value) {
        setUnconfirmedBalance(value);
        return this;
    }

    @Override
    public AccountBalanceRecord value5(Long value) {
        setForgedBalance(value);
        return this;
    }

    @Override
    public AccountBalanceRecord value6(Integer value) {
        setHeight(value);
        return this;
    }

    @Override
    public AccountBalanceRecord value7(Boolean value) {
        setLatest(value);
        return this;
    }

    @Override
    public AccountBalanceRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, Integer value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountBalanceRecord
     */
    public AccountBalanceRecord() {
        super(AccountBalance.ACCOUNT_BALANCE);
    }

    /**
     * Create a detached, initialised AccountBalanceRecord
     */
    public AccountBalanceRecord(Long dbId, Long id, Long balance, Long unconfirmedBalance, Long forgedBalance, Integer height, Boolean latest) {
        super(AccountBalance.ACCOUNT_BALANCE);

        setDbId(dbId);
        setId(id);
        setBalance(balance);
        setUnconfirmedBalance(unconfirmedBalance);
        setForgedBalance(forgedBalance);
        setHeight(height);
        setLatest(latest);
    }
}
