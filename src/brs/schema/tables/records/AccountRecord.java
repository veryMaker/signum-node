/*
 * This file is generated by jOOQ.
 */
package brs.schema.tables.records;


import brs.schema.tables.Account;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecord extends UpdatableRecordImpl<AccountRecord> implements Record9<Long, Long, Integer, byte[], Integer, String, String, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB.account.db_id</code>.
     */
    public void setDbId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>DB.account.db_id</code>.
     */
    public Long getDbId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB.account.id</code>.
     */
    public void setId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>DB.account.id</code>.
     */
    public Long getId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>DB.account.creation_height</code>.
     */
    public void setCreationHeight(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>DB.account.creation_height</code>.
     */
    public Integer getCreationHeight() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>DB.account.public_key</code>.
     */
    public void setPublicKey(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>DB.account.public_key</code>.
     */
    public byte[] getPublicKey() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>DB.account.key_height</code>.
     */
    public void setKeyHeight(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>DB.account.key_height</code>.
     */
    public Integer getKeyHeight() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>DB.account.name</code>.
     */
    public void setName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>DB.account.name</code>.
     */
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>DB.account.description</code>.
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>DB.account.description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>DB.account.height</code>.
     */
    public void setHeight(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>DB.account.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>DB.account.latest</code>.
     */
    public void setLatest(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>DB.account.latest</code>.
     */
    public Boolean getLatest() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Integer, byte[], Integer, String, String, Integer, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Long, Integer, byte[], Integer, String, String, Integer, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Account.ACCOUNT.DB_ID;
    }

    @Override
    public Field<Long> field2() {
        return Account.ACCOUNT.ID;
    }

    @Override
    public Field<Integer> field3() {
        return Account.ACCOUNT.CREATION_HEIGHT;
    }

    @Override
    public Field<byte[]> field4() {
        return Account.ACCOUNT.PUBLIC_KEY;
    }

    @Override
    public Field<Integer> field5() {
        return Account.ACCOUNT.KEY_HEIGHT;
    }

    @Override
    public Field<String> field6() {
        return Account.ACCOUNT.NAME;
    }

    @Override
    public Field<String> field7() {
        return Account.ACCOUNT.DESCRIPTION;
    }

    @Override
    public Field<Integer> field8() {
        return Account.ACCOUNT.HEIGHT;
    }

    @Override
    public Field<Boolean> field9() {
        return Account.ACCOUNT.LATEST;
    }

    @Override
    public Long component1() {
        return getDbId();
    }

    @Override
    public Long component2() {
        return getId();
    }

    @Override
    public Integer component3() {
        return getCreationHeight();
    }

    @Override
    public byte[] component4() {
        return getPublicKey();
    }

    @Override
    public Integer component5() {
        return getKeyHeight();
    }

    @Override
    public String component6() {
        return getName();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public Integer component8() {
        return getHeight();
    }

    @Override
    public Boolean component9() {
        return getLatest();
    }

    @Override
    public Long value1() {
        return getDbId();
    }

    @Override
    public Long value2() {
        return getId();
    }

    @Override
    public Integer value3() {
        return getCreationHeight();
    }

    @Override
    public byte[] value4() {
        return getPublicKey();
    }

    @Override
    public Integer value5() {
        return getKeyHeight();
    }

    @Override
    public String value6() {
        return getName();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public Integer value8() {
        return getHeight();
    }

    @Override
    public Boolean value9() {
        return getLatest();
    }

    @Override
    public AccountRecord value1(Long value) {
        setDbId(value);
        return this;
    }

    @Override
    public AccountRecord value2(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AccountRecord value3(Integer value) {
        setCreationHeight(value);
        return this;
    }

    @Override
    public AccountRecord value4(byte[] value) {
        setPublicKey(value);
        return this;
    }

    @Override
    public AccountRecord value5(Integer value) {
        setKeyHeight(value);
        return this;
    }

    @Override
    public AccountRecord value6(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public AccountRecord value8(Integer value) {
        setHeight(value);
        return this;
    }

    @Override
    public AccountRecord value9(Boolean value) {
        setLatest(value);
        return this;
    }

    @Override
    public AccountRecord values(Long value1, Long value2, Integer value3, byte[] value4, Integer value5, String value6, String value7, Integer value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecord
     */
    public AccountRecord() {
        super(Account.ACCOUNT);
    }

    /**
     * Create a detached, initialised AccountRecord
     */
    public AccountRecord(Long dbId, Long id, Integer creationHeight, byte[] publicKey, Integer keyHeight, String name, String description, Integer height, Boolean latest) {
        super(Account.ACCOUNT);

        setDbId(dbId);
        setId(id);
        setCreationHeight(creationHeight);
        setPublicKey(publicKey);
        setKeyHeight(keyHeight);
        setName(name);
        setDescription(description);
        setHeight(height);
        setLatest(latest);
    }
}
