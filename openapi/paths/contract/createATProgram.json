{
  "post": {
    "summary": "Publish Smart Contract",
    "description": "Publishes/Deploys a Smart Contract.<br/>Read more about smart contracts on the [official Signum Site](https://signum.network/smartcontracts) and on the [community wiki](https://wiki.signum.network/signum-smart-contracts/).<br/>See also [SmartC](https://github.com/deleterium/SmartC/tree/stable/docs) and [SmartJ](https://github.com/signum-network/signum-smartj) ",
    "tags": ["contract"],
    "parameters": [
      {
        "name": "name",
        "description": "The name of the contract. At maximum 30 alphanumerical characters without special chars and whitespaces",
        "in": "query",
        "schema": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9]{1,30}$"
        }
      },
      {
        "$ref": "../../parameters/description.json"
      },
      {
        "name": "code",
        "description": "The compiled byte code sequence of the code. This code is being created with SmartC or either SmartJ",
        "in": "query",
        "schema": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]+$"
        }
      },
      {
        "name": "data",
        "description": "This is the initial data stack. With this field it's possible to initialize a contracts variables",
        "in": "query",
        "schema": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]+$"
        }
      },
      {
        "name": "dpages",
        "description": "Number of pages of the data stack. Each Page has a size of 256 bytes.",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 40,
          "required": true
        }
      },
      {
        "name": "cspages",
        "description": "Number of pages of the code stack. Each Page has a size of 256 bytes.",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 40,
          "required": true
        }
      },
      {
        "name": "uspages",
        "description": "Number of pages of the user stack. Each Page has a size of 256 bytes.",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 40,
          "required": true
        }
      },
      {
        "name": "minActivationAmountNQT",
        "in": "query",
        "allowEmptyValue": false,
        "required": true,
        "description": "The minimum amount to dispatch the contracts execution expressed in Planck, i.e. 1 Signa = 10E8 Planck = 100000000 Planck. <br/>This value should be chosen in a way, that the contract never runs out of balance.",
        "schema": {
          "$ref": "../../schemas/amount.json"
        }
      },
      {
        "name": "referencedTransactionFullHash",
        "in": "query",
        "allowEmptyValue": false,
        "required": true,
        "description": "Instead of sending the `code`, it's possible to reuse an existing code from a previously published contract. Just use that contracts full hash. This unique concept is called [Green Contract](https://github.com/signum-network/SIPs/blob/master/SIP/sip-30.md) and reduces the payload and contract creation costs.",
        "schema": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]+$"
        }
      },
      {
        "$ref": "../../parameters/transaction/feeNQT.json"
      },
      {
        "$ref": "../../parameters/transaction/secretPhrase.json"
      },
      {
        "$ref": "../../parameters/transaction/publicKey.json"
      },
      {
        "$ref": "../../parameters/transaction/deadline.json"
      },
      {
        "$ref": "../../parameters/transaction/broadcast.json"
      }
    ],
    "responses": {
      "200": {
        "$ref": "../../responses/transaction.json"
      },
      "500": {
        "$ref": "../../responses/error.json"
      }
    }
  }
}
