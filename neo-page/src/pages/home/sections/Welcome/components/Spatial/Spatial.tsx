import { useRef } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import { useGLTF, Environment, ContactShadows } from "@react-three/drei";
import { theme } from "@/types";

// @ts-expect-error Just took it from an example
function Model(props) {
  /*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
  author: JasperTobias (https://sketchfab.com/JasperTobias)
  license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
  source: https://sketchfab.com/3d-models/lowpoly-earth-ce0cce9b528b47c7984bf0b2b600d705
  title: LowPoly Earth
  */

  const planet = useRef();

  useFrame(() => {
    // @ts-expect-error Just took it from an example
    planet.current.rotation.z += 0.01;
  });

  const { nodes, materials } = useGLTF("/3d/earth.gltf");
  return (
    <group
      rotation={[-Math.PI / 2, 0, Math.PI]}
      {...props}
      dispose={null}
      ref={planet}
    >
      <mesh
        // @ts-expect-error Just took it from an example
        geometry={nodes["URF-Height_Lampd_Ice_0"].geometry}
        material={materials.Lampd_Ice}
      />
      <mesh
        // @ts-expect-error Just took it from an example
        geometry={nodes["URF-Height_watr_0"].geometry}
        material={materials.watr}
        material-roughness={0}
      />
      <mesh
        // @ts-expect-error Just took it from an example
        geometry={nodes["URF-Height_Lampd_0"].geometry}
        material={materials.Lampd}
        material-color="lightgreen"
      ></mesh>
    </group>
  );
}

export const Spatial = () => {
  return (
    <Canvas camera={{ position: [5, 0, 0], fov: 30 }} autoFocus>
      <ambientLight intensity={0.5} />
      <Model />
      <Environment preset="city" />
      <ContactShadows
        frames={1}
        scale={5}
        position={[0, -1, 0]}
        far={1}
        blur={5}
        opacity={0.5}
        color={theme.colors.primary.deco(100)}
      />
    </Canvas>
  );
};
