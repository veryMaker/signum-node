// 15.12.2023: ohager
// This is the new model for H2 V2
// Most of the migrations are already built in here
create table "account"
(
  "db_id"               BIGINT generated by default as identity
    primary key,
  "id"                  BIGINT               not null,
  "creation_height"     INTEGER              not null,
  "public_key"          BINARY VARYING(32),
  "key_height"          INTEGER,
  "balance"             BIGINT               not null,
  "unconfirmed_balance" BIGINT               not null,
  "forged_balance"      BIGINT               not null,
  "name"                CHARACTER VARYING,
  "description"         CHARACTER VARYING,
  "height"              INTEGER              not null,
  "latest"              BOOLEAN default TRUE not null
);

create index "account_height_idx"
  on "account" ("height");

create unique index "account_id_height_idx"
  on "account" ("id" asc, "height" desc);

create index "account_id_latest_idx"
  on "account" ("id", "latest");

create table "account_asset"
(
  "db_id"                BIGINT auto_increment
    primary key,
  "account_id"           BIGINT               not null,
  "asset_id"             BIGINT               not null,
  "quantity"             BIGINT               not null,
  "unconfirmed_quantity" BIGINT               not null,
  "height"               INTEGER              not null,
  "latest"               BOOLEAN default TRUE not null
);

create index "account_asset_assetid_idx"
  on "account_asset" ("latest", "asset_id");

create index "account_asset_height_idx"
  on "account_asset" ("height");

create unique index "account_asset_id_height_idx"
  on "account_asset" ("account_id" asc, "asset_id" asc, "height" desc);

create index "account_asset_quantity_idx"
  on "account_asset" ("quantity" desc);

-- create table "account_balance"
-- (
--   "db_id"               BIGINT generated by default as identity
--     primary key,
--   "id"                  BIGINT               not null,
--   "balance"             BIGINT               not null,
--   "unconfirmed_balance" BIGINT               not null,
--   "forged_balance"      BIGINT               not null,
--   "height"              INTEGER              not null,
--   "latest"              BOOLEAN default TRUE not null
-- );
--
-- create index "account_balance_height_idx"
--   on "account_balance" ("height");
--
-- create unique index "account_balance_id_height_idx"
--   on "account_balance" ("id", "height");
--
-- create index "account_balance_id_latest_idx"
--   on "account_balance" ("id", "latest");

create table "alias"
(
  "db_id"            BIGINT generated by default as identity
    primary key,
  "id"               BIGINT               not null,
  "account_id"       BIGINT               not null,
  "alias_name"       CHARACTER VARYING    not null,
  "alias_name_lower" CHARACTER VARYING    not null,
  "alias_uri"        CHARACTER VARYING    not null,
  "timestamp"        INTEGER              not null,
  "height"           INTEGER              not null,
  "latest"           BOOLEAN default TRUE not null,
  "tld"              BIGINT  default 0
);

create table "alias_offer"
(
  "db_id"    BIGINT auto_increment
    primary key,
  "id"       BIGINT               not null,
  "price"    BIGINT               not null,
  "buyer_id" BIGINT,
  "height"   INTEGER              not null,
  "latest"   BOOLEAN default TRUE not null
);

create index "alias_offer_height_idx"
  on "alias_offer" ("height");

create unique index "alias_offer_id_height_idx"
  on "alias_offer" ("id" asc, "height" desc);

create table "ask_order"
(
  "db_id"           BIGINT auto_increment
    primary key,
  "id"              BIGINT               not null,
  "account_id"      BIGINT               not null,
  "asset_id"        BIGINT               not null,
  "price"           BIGINT               not null,
  "quantity"        BIGINT               not null,
  "creation_height" INTEGER              not null,
  "height"          INTEGER              not null,
  "latest"          BOOLEAN default TRUE not null
);

create index "ask_order_account_id_idx"
  on "ask_order" ("account_id" asc, "height" desc);

create index "ask_order_asset_id_price_idx"
  on "ask_order" ("latest", "asset_id", "price");

create index "ask_order_creation_idx"
  on "ask_order" ("creation_height" desc);

create index "ask_order_height_idx"
  on "ask_order" ("height");

create unique index "ask_order_id_height_idx"
  on "ask_order" ("id" asc, "height" desc);

create table "asset"
(
  "db_id"       BIGINT auto_increment
    primary key,
  "id"          BIGINT                not null,
  "account_id"  BIGINT                not null,
  "name"        CHARACTER VARYING     not null,
  "description" CHARACTER VARYING,
  "quantity"    BIGINT                not null,
  "decimals"    TINYINT               not null,
  "height"      INTEGER               not null,
  "mintable"    BOOLEAN default FALSE not null
);

create index "asset_account_id_idx"
  on "asset" ("account_id");

create index "asset_height_idx"
  on "asset" ("height");

create unique index "asset_id_idx"
  on "asset" ("id");

create table "asset_transfer"
(
  "db_id"        BIGINT auto_increment
    primary key,
  "id"           BIGINT  not null,
  "asset_id"     BIGINT  not null,
  "sender_id"    BIGINT  not null,
  "recipient_id" BIGINT  not null,
  "quantity"     BIGINT  not null,
  "timestamp"    INTEGER not null,
  "height"       INTEGER not null
);

create index "asset_transfer_asset_id_idx"
  on "asset_transfer" ("asset_id" asc, "height" desc);

create index "asset_transfer_height_idx"
  on "asset_transfer" ("height");

create index "asset_transfer_id_idx"
  on "asset_transfer" ("id");

create index "asset_transfer_recipient_id_idx"
  on "asset_transfer" ("recipient_id" asc, "height" desc);

create index "asset_transfer_sender_id_idx"
  on "asset_transfer" ("sender_id" asc, "height" desc);

create table "at"
(
  "db_id"              BIGINT auto_increment
    primary key,
  "id"                 BIGINT               not null,
  "creator_id"         BIGINT               not null,
  "name"               CHARACTER VARYING,
  "description"        CHARACTER VARYING,
  "version"            SMALLINT             not null,
  "csize"              INTEGER              not null,
  "dsize"              INTEGER              not null,
  "c_user_stack_bytes" INTEGER              not null,
  "c_call_stack_bytes" INTEGER              not null,
  "creation_height"    INTEGER              not null,
  "ap_code"            BINARY VARYING,
  "height"             INTEGER              not null,
  "latest"             BOOLEAN default TRUE not null,
  "ap_code_hash_id"    BIGINT
);

create index "at_ap_code_hash_id_index"
  on "at" ("ap_code_hash_id");

create index "at_creator_id_height_idx"
  on "at" ("creator_id" asc, "height" desc);

create index "at_height_idx"
  on "at" ("height");

create unique index "at_id_height_idx"
  on "at" ("id" asc, "height" desc);

create index "at_latest_idx"
  on "at" ("latest", "id");

create table "at_map"
(
  "db_id"  BIGINT auto_increment
    primary key,
  "at_id"  BIGINT               not null,
  "key1"   BIGINT               not null,
  "key2"   BIGINT,
  "value"  BIGINT,
  "height" INTEGER              not null,
  "latest" BOOLEAN default TRUE not null
);

create index "at_map_at_keys_idx"
  on "at_map" ("at_id", "key1", "key2");

create index "at_map_at_latest_idx"
  on "at_map" ("at_id", "latest");

create index "at_map_height_idx"
  on "at_map" ("height");

create table "at_state"
(
  "db_id"                    BIGINT auto_increment
    primary key,
  "at_id"                    BIGINT               not null,
  "state"                    BINARY VARYING       not null,
  "prev_height"              INTEGER              not null,
  "next_height"              INTEGER              not null,
  "sleep_between"            INTEGER              not null,
  "prev_balance"             BIGINT               not null,
  "freeze_when_same_balance" BOOLEAN              not null,
  "min_activate_amount"      BIGINT               not null,
  "height"                   INTEGER              not null,
  "latest"                   BOOLEAN default TRUE not null
);

create unique index "at_state_at_id_height_idx"
  on "at_state" ("at_id" asc, "height" desc);

create index "at_state_height_idx"
  on "at_state" ("height");

create index "at_state_id_latest_idx"
  on "at_state" ("at_id", "latest");

create index "at_state_id_next_height_height_idx"
  on "at_state" ("at_id" asc, "next_height" asc, "height" desc);

create table "bid_order"
(
  "db_id"           BIGINT auto_increment
    primary key,
  "id"              BIGINT               not null,
  "account_id"      BIGINT               not null,
  "asset_id"        BIGINT               not null,
  "price"           BIGINT               not null,
  "quantity"        BIGINT               not null,
  "creation_height" INTEGER              not null,
  "height"          INTEGER              not null,
  "latest"          BOOLEAN default TRUE not null
);

create index "bid_order_account_id_idx"
  on "bid_order" ("account_id" asc, "height" desc);

create index "bid_order_asset_id_price_idx"
  on "bid_order" ("latest", "asset_id", "price");

create index "bid_order_creation_idx"
  on "bid_order" ("creation_height" desc);

create index "bid_order_height_idx"
  on "bid_order" ("height");

create unique index "bid_order_id_height_idx"
  on "bid_order" ("id" asc, "height" desc);

create table "block"
(
  "db_id"                 BIGINT generated by default as identity
    primary key,
  "id"                    BIGINT             not null unique,
  "version"               INTEGER            not null,
  "timestamp"             INTEGER            not null,
  "previous_block_id"     BIGINT,
  "total_amount"          BIGINT             not null,
  "total_fee"             BIGINT             not null,
  "payload_length"        INTEGER            not null,
  "generator_public_key"  BINARY VARYING(32) not null,
  "previous_block_hash"   BINARY VARYING(32),
  "cumulative_difficulty" BINARY VARYING     not null,
  "base_target"           BIGINT             not null,
  "next_block_id"         BIGINT,
  "height"                INTEGER            not null,
  "generation_signature"  BINARY VARYING(64) not null,
  "block_signature"       BINARY VARYING(64) not null,
  "payload_hash"          BINARY VARYING(32) not null,
  "generator_id"          BIGINT             not null,
  "nonce"                 BIGINT             not null,
  "ats"                   BINARY VARYING,
  "total_fee_cash_back"   BIGINT default 0,
  "total_fee_burnt"       BIGINT default 0,
  FOREIGN KEY ("previous_block_id") REFERENCES "block" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("next_block_id") REFERENCES "block" ("id") ON DELETE SET NULL
);

create index "block_generator_id_height_idx"
  on "block" ("generator_id", "height");

create index "block_generator_id_idx"
  on "block" ("generator_id");

create unique index "block_height_idx"
  on "block" ("height");

create unique index "block_id_idx"
  on "block" ("id");

create unique index "block_timestamp_idx"
  on "block" ("timestamp" desc);

create table "escrow"
(
  "db_id"            BIGINT auto_increment
    primary key,
  "id"               BIGINT               not null,
  "sender_id"        BIGINT               not null,
  "recipient_id"     BIGINT               not null,
  "amount"           BIGINT               not null,
  "required_signers" INTEGER,
  "deadline"         INTEGER              not null,
  "deadline_action"  INTEGER              not null,
  "height"           INTEGER              not null,
  "latest"           BOOLEAN default TRUE not null
);

create index "escrow_deadline_height_idx"
  on "escrow" ("deadline" asc, "height" desc);

create unique index "escrow_id_height_idx"
  on "escrow" ("id" asc, "height" desc);

create index "escrow_recipient_id_height_idx"
  on "escrow" ("recipient_id" asc, "height" desc);

create index "escrow_sender_id_height_idx"
  on "escrow" ("sender_id" asc, "height" desc);

create table "escrow_decision"
(
  "db_id"      BIGINT auto_increment
    primary key,
  "escrow_id"  BIGINT               not null,
  "account_id" BIGINT               not null,
  "decision"   INTEGER              not null,
  "height"     INTEGER              not null,
  "latest"     BOOLEAN default TRUE not null
);

create index "escrow_decision_account_id_height_idx"
  on "escrow_decision" ("account_id" asc, "height" desc);

create unique index "escrow_decision_escrow_id_account_id_height_idx"
  on "escrow_decision" ("escrow_id" asc, "account_id" asc, "height" desc);

create index "escrow_decision_escrow_id_height_idx"
  on "escrow_decision" ("escrow_id" asc, "height" desc);

create table "goods"
(
  "db_id"       BIGINT auto_increment
    primary key,
  "id"          BIGINT               not null,
  "seller_id"   BIGINT               not null,
  "name"        CHARACTER VARYING    not null,
  "description" CHARACTER VARYING,
  "tags"        CHARACTER VARYING,
  "timestamp"   INTEGER              not null,
  "quantity"    INTEGER              not null,
  "price"       BIGINT               not null,
  "delisted"    BOOLEAN              not null,
  "height"      INTEGER              not null,
  "latest"      BOOLEAN default TRUE not null
);

create unique index "goods_id_height_idx"
  on "goods" ("id" asc, "height" desc);

create index "goods_seller_id_name_idx"
  on "goods" ("seller_id", "name");

create index "goods_timestamp_idx"
  on "goods" ("timestamp" desc, "height" desc);

create table "indirect_incoming"
(
  "db_id"          BIGINT generated by default as identity
    primary key,
  "account_id"     BIGINT  not null,
  "transaction_id" BIGINT  not null,
  "height"         INTEGER not null,
  "amount"         BIGINT default 0,
  "quantity"       BIGINT default 0
);

create unique index "indirect_incoming_db_id_uindex"
  on "indirect_incoming" ("account_id", "transaction_id");

create index "indirect_incoming_height_idx"
  on "indirect_incoming" ("height");

create index "indirect_incoming_id_index"
  on "indirect_incoming" ("account_id");

create index "indirect_incoming_tx_idx"
  on "indirect_incoming" ("transaction_id");

create table "peer"
(
  "address" CHARACTER VARYING not null
    primary key
);

create table "purchase"
(
  "db_id"                BIGINT auto_increment
    primary key,
  "id"                   BIGINT                not null,
  "buyer_id"             BIGINT                not null,
  "goods_id"             BIGINT                not null,
  "seller_id"            BIGINT                not null,
  "quantity"             INTEGER               not null,
  "price"                BIGINT                not null,
  "deadline"             INTEGER               not null,
  "note"                 BINARY VARYING,
  "nonce"                BINARY VARYING(32),
  "timestamp"            INTEGER               not null,
  "pending"              BOOLEAN               not null,
  "goods"                BINARY VARYING,
  "goods_nonce"          BINARY VARYING(32),
  "refund_note"          BINARY VARYING,
  "refund_nonce"         BINARY VARYING(32),
  "has_feedback_notes"   BOOLEAN default FALSE not null,
  "has_public_feedbacks" BOOLEAN default FALSE not null,
  "discount"             BIGINT                not null,
  "refund"               BIGINT                not null,
  "height"               INTEGER               not null,
  "latest"               BOOLEAN default TRUE  not null
);

create index "purchase_buyer_id_height_idx"
  on "purchase" ("buyer_id" asc, "height" desc);

create index "purchase_deadline_idx"
  on "purchase" ("deadline" desc, "height" desc);

create unique index "purchase_id_height_idx"
  on "purchase" ("id" asc, "height" desc);

create index "purchase_seller_id_height_idx"
  on "purchase" ("seller_id" asc, "height" desc);

create index "purchase_timestamp_idx"
  on "purchase" ("timestamp" desc, "id" asc);

create table "purchase_feedback"
(
  "db_id"          BIGINT auto_increment
    primary key,
  "id"             BIGINT               not null,
  "feedback_data"  BINARY VARYING       not null,
  "feedback_nonce" BINARY VARYING(32)   not null,
  "height"         INTEGER              not null,
  "latest"         BOOLEAN default TRUE not null
);

create index "purchase_feedback_id_height_idx"
  on "purchase_feedback" ("id" asc, "height" desc);

create table "purchase_public_feedback"
(
  "db_id"           BIGINT auto_increment
    primary key,
  "id"              BIGINT               not null,
  "public_feedback" CHARACTER VARYING    not null,
  "height"          INTEGER              not null,
  "latest"          BOOLEAN default TRUE not null
);

create index "purchase_public_feedback_id_height_idx"
  on "purchase_public_feedback" ("id" asc, "height" desc);

create table "reward_recip_assign"
(
  "db_id"         BIGINT auto_increment
    primary key,
  "account_id"    BIGINT               not null,
  "prev_recip_id" BIGINT               not null,
  "recip_id"      BIGINT               not null,
  "from_height"   INTEGER              not null,
  "height"        INTEGER              not null,
  "latest"        BOOLEAN default TRUE not null
);

create unique index "reward_recip_assign_account_id_height_idx"
  on "reward_recip_assign" ("account_id" asc, "height" desc);

create index "reward_recip_assign_height_idx"
  on "reward_recip_assign" ("height");

create index "reward_recip_assign_recip_id_height_idx"
  on "reward_recip_assign" ("recip_id" asc, "height" desc);

create table "subscription"
(
  "db_id"        BIGINT auto_increment
    primary key,
  "id"           BIGINT               not null,
  "sender_id"    BIGINT               not null,
  "recipient_id" BIGINT               not null,
  "amount"       BIGINT               not null,
  "frequency"    INTEGER              not null,
  "time_next"    INTEGER              not null,
  "height"       INTEGER              not null,
  "latest"       BOOLEAN default TRUE not null
);

create index "subscription_height_idx"
  on "subscription" ("height");

create unique index "subscription_id_height_idx"
  on "subscription" ("id" asc, "height" desc);

create index "subscription_latest_index"
  on "subscription" ("latest");

create index "subscription_recipient_id_height_idx"
  on "subscription" ("recipient_id" asc, "height" desc);

create index "subscription_sender_id_height_idx"
  on "subscription" ("sender_id" asc, "height" desc);

create index "subscription_time_next_index"
  on "subscription" ("time_next");

create table "trade"
(
  "db_id"            BIGINT auto_increment
    primary key,
  "asset_id"         BIGINT  not null,
  "block_id"         BIGINT  not null,
  "ask_order_id"     BIGINT  not null,
  "bid_order_id"     BIGINT  not null,
  "ask_order_height" INTEGER not null,
  "bid_order_height" INTEGER not null,
  "seller_id"        BIGINT  not null,
  "buyer_id"         BIGINT  not null,
  "quantity"         BIGINT  not null,
  "price"            BIGINT  not null,
  "timestamp"        INTEGER not null,
  "height"           INTEGER not null
);

create unique index "trade_ask_bid_idx"
  on "trade" ("ask_order_id", "bid_order_id");

create index "trade_asset_id_idx"
  on "trade" ("asset_id" asc, "height" desc);

create index "trade_buyer_id_idx"
  on "trade" ("buyer_id" asc, "height" desc);

create index "trade_height_idx"
  on "trade" ("height");

create index "trade_seller_id_idx"
  on "trade" ("seller_id" asc, "height" desc);

create table "transaction"
(
  "db_id"                           BIGINT generated by default as identity
    primary key,
  "id"                              BIGINT                not null unique,
  "deadline"                        SMALLINT              not null,
  "sender_public_key"               BINARY VARYING(32)    not null,
  "recipient_id"                    BIGINT,
  "amount"                          BIGINT                not null,
  "fee"                             BIGINT                not null,
  "height"                          INTEGER               not null,
  "block_id"                        BIGINT                not null,
  "signature"                       BINARY VARYING(64),
  "timestamp"                       INTEGER               not null,
  "type"                            TINYINT               not null,
  "subtype"                         TINYINT               not null,
  "sender_id"                       BIGINT                not null,
  "block_timestamp"                 INTEGER               not null,
  "full_hash"                       BINARY VARYING(32)    not null,
  "referenced_transaction_fullhash" BINARY VARYING(32),
  "attachment_bytes"                BINARY VARYING,
  "version"                         TINYINT               not null,
  "has_message"                     BOOLEAN default FALSE not null,
  "has_encrypted_message"           BOOLEAN default FALSE not null,
  "has_public_key_announcement"     BOOLEAN default FALSE not null,
  "ec_block_height"                 INTEGER default NULL,
  "ec_block_id"                     BIGINT  default NULL,
  "has_encrypttoself_message"       BOOLEAN default FALSE not null,
  "cash_back_id"                    BIGINT  default 0,
  foreign key ("block_id") references "block" ("id") on delete cascade
);

create index "transaction_block_timestamp_idx"
  on "transaction" ("block_timestamp" desc);

create unique index "transaction_full_hash_idx"
  on "transaction" ("full_hash");

create index "transaction_height_idx"
  on "transaction" ("height");

create index "transaction_block_id_idx"
  on "transaction" ("block_id");

create unique hash index "transaction_id_idx"
  on "transaction" ("id");

create index "transaction_recipient_id_amount_height_idx"
  on "transaction" ("recipient_id", "amount", "height");

create index "transaction_recipient_id_idx"
  on "transaction" ("recipient_id");

create index "transaction_ref_tx_fullhash_idx"
  on "transaction" ("referenced_transaction_fullhash");

create index "transaction_sender_id_idx"
  on "transaction" ("sender_id");

create index "transaction_type_subtype_idx"
  on "transaction" ("type", "subtype");

create index "tx_cash_back_index"
  on "transaction" ("cash_back_id");

create index "tx_sender_type"
  on "transaction" ("sender_id", "type");

create table "unconfirmed_transaction"
(
  "db_id"              BIGINT auto_increment
    primary key,
  "id"                 BIGINT         not null,
  "expiration"         INTEGER        not null,
  "transaction_height" INTEGER        not null,
  "fee_per_byte"       BIGINT         not null,
  "timestamp"          INTEGER        not null,
  "transaction_bytes"  BINARY VARYING not null,
  "height"             INTEGER        not null
);

create index "unconfirmed_transaction_height_fee_timestamp_idx"
  on "unconfirmed_transaction" ("transaction_height" asc, "fee_per_byte" desc, "timestamp" asc);

create unique index "unconfirmed_transaction_id_idx"
  on "unconfirmed_transaction" ("id");

